ui {
  notification{
    #
    # 알람 심각성(severity level)으로 알람을 필터링한다.
    #
    # severity level 크기는 "1 > 2 > 3 > 4 > 5"이다(1이 가장 높은 심각성이다).
    # `severity-level= 2`일 때는 severity-level 1과 2만 알람 통지한다.
    # severity-level 기본값은 2이다.
    #
    # 예. 모든 알람
    #     - severity-level= 5
    # 예. 3 수준 이상 알람만
    #     - severity-level= 3
    #
    severity-level= 2

    #
    # 서버 이름 패턴(host-names)으로 알람을 필터링한다.
    #   패턴은 정규식 표현식으로 작성한다(대소문자를 구분하지 않는다).
    #   https://regexr.com/
    #   https://regex101.com/
    #
    # 예. 모든 알람
    #     - host-names = []
    #     - host-names = [".+"]
    # 예. 특정 서버 알람만
    #     - host-names = ["S1", "S3"]
    # 예. 특정 RV 서버 알람만
    #     - host-names = ["S4-.+-RV.+"]
    # 예. 특정 서버 또는(OR) 특정 RV 서버 알람만
    #     - host-names = ["S1", "S3", "S4-.+-RV.+"]
    #
    host-names = []

    #
    # 알람 이름 패턴(monitor-names)으로 알람을 필터링한다.
    #
    # 예. 모든 알람
    #     - monitor-names = []
    #     - monitor-names = [".+"]
    # 예. CPU 알람만
    #     - monitor-names = ["CPU"]
    # 예. CPU 또는(OR) DISK 알람만
    #     - monitor-names = ["CPU", "DISK"]
    #
    monitor-names = []

    lifetime = 5s
    width = 370
    dateformat = "yyyy-MM-dd HH:mm:ss.ffffff"
    message-length=150
    message-format = "{monitor_name}{Trigger}{repos}"
    maximum-count = 4
  }
  server{
    #
	# Foundry
	# url = "http://12.21.30.55:7780"
	#
	# 미래로시스템
	# url = "http://192.168.70.21:7780"
	#
    url = "http://192.168.170.7:7780"
    url_exercise = "http://kyeongmin.iptime.org:3000"
    url_lotto = "http://kyeongmin.iptime.org:3001"
    alert-dashboard = "c205d200-fef7-11ea-a4e4-2ba86bc6ed1a?"
  }
}

kafka {
  topics = ["alertbeat"]
  bootstrap-servers = [
    #
	# Foundry
	# "12.21.30.55:7710"
	#
	# 미래로시스템
	# "192.168.70.21:7710"
	#
	"10.10.50.71:7710"
  ]
}

akka.kafka.producer {
  parallelism = 100
  flush-timeout = 10s
  use-dispatcher = "akka.kafka.default-dispatcher"
}

akka.kafka.consumer {
  poll-interval = 50ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  commit-time-warning = 1s
  commit-refresh-interval = infinite
  buffer-size = 128
  use-dispatcher = "akka.kafka.default-dispatcher"
  wait-close-partition = 500ms
  position-timeout = 5s
  offset-for-times-timeout = 5s
  metadata-request-timeout = 5s
  eos-draining-check-interval = 30ms
  partition-handler-warning = 5s
}

akka.kafka.default-dispatcher {
  type = "Dispatcher"
  executor = "default-executor"
}

akka.kafka.committer {
    max-batch = 1000
    max-interval = 10s
    parallelism = 1
}

akka {
    loglevel = DEBUG
    #loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
    log-config-on-start = on
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
      event-stream = on
      unhandled = on
      router-misconfiguration = on
    }
}
