version: '3.1'
services:
    reverseproxy:
        #image: reverseproxy
        build:
          context: ./Ngnix/
          dockerfile: Dockerfile
        container_name: reverseproxy
        volumes:
        - ./Ngnix/nginx.conf:/etc/nginx/nginx.conf:rw
        - ./ssl:/etc/ssl
        ports:
          - 80:80
          - 443:443
        restart: always

    postgres:
        image: postgres:12
        container_name: postgres
        environment:
          POSTGRES_USER: postgres     # define credentials
          POSTGRES_PASSWORD: postgres # define credentials
          POSTGRES_DB: postgres       # define database
        ports:
           - 5432:5432
        volumes:
           - ./docker_server/volumes/postgres/_data:/var/lib/postgresql/data

    historychecker:
        depends_on:
           - reverseproxy
        #image: asp
        build:
          context:  ./HistoryChecker/
          dockerfile: ./HistoryChecker/Dockerfile
        container_name: historychecker
        restart: always
        environment:
          - ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true
          - ASPNETCORE_ENVIRONMENT=Development
        volumes:
          - ./docker_server/srv/asp:/app/App_Data
    # certbot:
    #     image: certbot/certbot:latest
    #     command: certonly --webroot --webroot-path=/var/www/certbot --email oksos0817@naver.com --agree-tos --no-eff-email -d 3dpit.iptime.org
    #     volumes:
    #         - ./ssl4:/etc/ssl
        